# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Qt_Designer_Layout_Tabs.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class UI(object):
    def __init__(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1372, 781)
        MainWindow.setMinimumSize(QtCore.QSize(720, 700))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(73, 96, 110))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 235, 231))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        MainWindow.setPalette(palette)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(239, 235, 231);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(719, 700))
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setStyleSheet("font-size:15px")
        self.tabWidget.setObjectName("tabWidget")
        self.imageTab = QtWidgets.QWidget()
        self.imageTab.setObjectName("imageTab")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.imageTab)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.Image_GridLayout = QtWidgets.QGridLayout()
        self.Image_GridLayout.setObjectName("Image_GridLayout")
        self.loadImage = QtWidgets.QPushButton(self.imageTab)
        self.loadImage.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.loadImage.setStyleSheet("font-size:20px")
        self.loadImage.setObjectName("loadImage")
        self.Image_GridLayout.addWidget(self.loadImage, 1, 0, 1, 1)
        self.analyseImage = QtWidgets.QPushButton(self.imageTab)
        self.analyseImage.setStatusTip("")
        self.analyseImage.setStyleSheet("font-size:20px")
        self.analyseImage.setObjectName("analyseImage")
        self.Image_GridLayout.addWidget(self.analyseImage, 1, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.imageTab)
        self.label.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.label.setToolTipDuration(3)
        self.label.setStatusTip("")
        self.label.setStyleSheet("")
        self.label.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.Image_GridLayout.addWidget(self.label, 0, 0, 1, 2)
        self.gridLayout_2.addLayout(self.Image_GridLayout, 0, 0, 1, 1)
        self.Analysis_GridLayout = QtWidgets.QGridLayout()
        self.Analysis_GridLayout.setObjectName("Analysis_GridLayout")
        self.analysisView = QtWidgets.QListView(self.imageTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.analysisView.sizePolicy().hasHeightForWidth())
        self.analysisView.setSizePolicy(sizePolicy)
        self.analysisView.setStatusTip("")
        self.analysisView.setWhatsThis("")
        self.analysisView.setStyleSheet("background-color: rgb(231, 231, 231);")
        self.analysisView.setObjectName("analysisView")
        self.Analysis_GridLayout.addWidget(self.analysisView, 1, 0, 1, 2)
        self.generateReport = QtWidgets.QPushButton(self.imageTab)
        self.generateReport.setEnabled(False)
        self.generateReport.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.generateReport.setStyleSheet("font-size:20px")
        self.generateReport.setObjectName("generateReport")
        self.Analysis_GridLayout.addWidget(self.generateReport, 3, 0, 1, 2)
        self.analysisHeading = QtWidgets.QLabel(self.imageTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.analysisHeading.sizePolicy().hasHeightForWidth())
        self.analysisHeading.setSizePolicy(sizePolicy)
        self.analysisHeading.setObjectName("analysisHeading")
        self.Analysis_GridLayout.addWidget(self.analysisHeading, 0, 0, 1, 2)
        self.gridLayout_2.addLayout(self.Analysis_GridLayout, 0, 1, 1, 1)
        self.Table_verticalLayout = QtWidgets.QVBoxLayout()
        self.Table_verticalLayout.setObjectName("Table_verticalLayout")
        self.MetadataHeading = QtWidgets.QLabel(self.imageTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MetadataHeading.sizePolicy().hasHeightForWidth())
        self.MetadataHeading.setSizePolicy(sizePolicy)
        self.MetadataHeading.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.MetadataHeading.setWordWrap(False)
        self.MetadataHeading.setObjectName("MetadataHeading")
        self.Table_verticalLayout.addWidget(self.MetadataHeading)
        self.Metadata_table = QtWidgets.QTableWidget(self.imageTab)
        self.Metadata_table.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.Metadata_table.sizePolicy().hasHeightForWidth())
        self.Metadata_table.setSizePolicy(sizePolicy)
        self.Metadata_table.setToolTipDuration(3)
        self.Metadata_table.setStyleSheet("background-color: rgb(238, 238, 236);")
        self.Metadata_table.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.Metadata_table.setAlternatingRowColors(True)
        self.Metadata_table.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Metadata_table.setShowGrid(True)
        self.Metadata_table.setGridStyle(QtCore.Qt.DotLine)
        self.Metadata_table.setWordWrap(True)
        self.Metadata_table.setObjectName("Metadata_table")
        self.Metadata_table.setColumnCount(2)
        self.Metadata_table.setRowCount(2)
        item = QtWidgets.QTableWidgetItem()
        self.Metadata_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Metadata_table.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Metadata_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Metadata_table.setHorizontalHeaderItem(1, item)
        self.Metadata_table.horizontalHeader().setVisible(True)
        self.Metadata_table.horizontalHeader().setCascadingSectionResizes(False)
        self.Metadata_table.verticalHeader().setVisible(False)
        self.Table_verticalLayout.addWidget(self.Metadata_table)
        self.addNewEntries = QtWidgets.QPushButton(self.imageTab)
        self.addNewEntries.setEnabled(False)
        self.addNewEntries.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.addNewEntries.setStyleSheet("font-size:20px")
        self.addNewEntries.setObjectName("addNewEntries")
        self.Table_verticalLayout.addWidget(self.addNewEntries)
        self.gridLayout_2.addLayout(self.Table_verticalLayout, 0, 2, 1, 1)
        self.tabWidget.addTab(self.imageTab, "")
        self.videoTab = QtWidgets.QWidget()
        self.videoTab.setObjectName("videoTab")
        self.layoutWidget_4 = QtWidgets.QWidget(self.videoTab)
        self.layoutWidget_4.setGeometry(QtCore.QRect(10, 10, 741, 661))
        self.layoutWidget_4.setObjectName("layoutWidget_4")
        self.Video_GridLayout = QtWidgets.QGridLayout(self.layoutWidget_4)
        self.Video_GridLayout.setContentsMargins(0, 0, 0, 0)
        self.Video_GridLayout.setObjectName("Video_GridLayout")
        self.loadVideo = QtWidgets.QPushButton(self.layoutWidget_4)
        self.loadVideo.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.loadVideo.setStyleSheet("font-size:20px")
        self.loadVideo.setObjectName("loadVideo")
        self.Video_GridLayout.addWidget(self.loadVideo, 6, 0, 1, 1)
        self.analyseVideo = QtWidgets.QPushButton(self.layoutWidget_4)
        self.analyseVideo.setStatusTip("")
        self.analyseVideo.setStyleSheet("font-size:20px")
        self.analyseVideo.setObjectName("analyseVideo")
        self.Video_GridLayout.addWidget(self.analyseVideo, 6, 1, 1, 1)
        self.videoCanvas = QtWidgets.QLabel(self.layoutWidget_4)
        self.videoCanvas.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.videoCanvas.setToolTipDuration(-1)
        self.videoCanvas.setStatusTip("")
        self.videoCanvas.setStyleSheet("")
        self.videoCanvas.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.videoCanvas.setAlignment(QtCore.Qt.AlignCenter)
        self.videoCanvas.setObjectName("videoCanvas")
        self.Video_GridLayout.addWidget(self.videoCanvas, 0, 0, 1, 2)
        self.videoSeeker = QtWidgets.QSlider(self.layoutWidget_4)
        self.videoSeeker.setOrientation(QtCore.Qt.Horizontal)
        self.videoSeeker.setObjectName("videoSeeker")
        self.Video_GridLayout.addWidget(self.videoSeeker, 1, 0, 1, 2)
        self.playVideo = QtWidgets.QPushButton(self.layoutWidget_4)
        self.playVideo.setEnabled(False)
        self.playVideo.setObjectName("playVideo")
        self.Video_GridLayout.addWidget(self.playVideo, 2, 0, 1, 1)
        self.pauseVideo = QtWidgets.QPushButton(self.layoutWidget_4)
        self.pauseVideo.setEnabled(False)
        self.pauseVideo.setObjectName("pauseVideo")
        self.Video_GridLayout.addWidget(self.pauseVideo, 2, 1, 1, 1)
        self.layoutWidget_5 = QtWidgets.QWidget(self.videoTab)
        self.layoutWidget_5.setGeometry(QtCore.QRect(770, 10, 561, 661))
        self.layoutWidget_5.setObjectName("layoutWidget_5")
        self.Analysis_GridLayout_Video = QtWidgets.QGridLayout(self.layoutWidget_5)
        self.Analysis_GridLayout_Video.setContentsMargins(0, 0, 0, 0)
        self.Analysis_GridLayout_Video.setObjectName("Analysis_GridLayout_Video")
        self.analysisView_Video = QtWidgets.QListView(self.layoutWidget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.analysisView_Video.sizePolicy().hasHeightForWidth())
        self.analysisView_Video.setSizePolicy(sizePolicy)
        self.analysisView_Video.setStatusTip("")
        self.analysisView_Video.setWhatsThis("")
        self.analysisView_Video.setStyleSheet("background-color: rgb(231, 231, 231);")
        self.analysisView_Video.setObjectName("analysisView_Video")
        self.Analysis_GridLayout_Video.addWidget(self.analysisView_Video, 1, 0, 1, 2)
        self.generateReport_Video = QtWidgets.QPushButton(self.layoutWidget_5)
        self.generateReport_Video.setEnabled(False)
        self.generateReport_Video.setCursor(QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.generateReport_Video.setStyleSheet("font-size:20px")
        self.generateReport_Video.setObjectName("generateReport_Video")
        self.Analysis_GridLayout_Video.addWidget(self.generateReport_Video, 3, 0, 1, 2)
        self.AnalysisHeading = QtWidgets.QLabel(self.layoutWidget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.AnalysisHeading.sizePolicy().hasHeightForWidth())
        self.AnalysisHeading.setSizePolicy(sizePolicy)
        self.AnalysisHeading.setObjectName("AnalysisHeading")
        self.Analysis_GridLayout_Video.addWidget(self.AnalysisHeading, 0, 0, 1, 2)
        self.tabWidget.addTab(self.videoTab, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1372, 35))
        self.menubar.setStyleSheet("font-size:17px; padding: 5px")
        self.menubar.setObjectName("menubar")
        self.menuFIle = QtWidgets.QMenu(self.menubar)
        self.menuFIle.setObjectName("menuFIle")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionImport_Image = QtWidgets.QAction(MainWindow)
        self.actionImport_Image.setObjectName("actionImport_Image")
        self.actionExport_Image = QtWidgets.QAction(MainWindow)
        self.actionExport_Image.setObjectName("actionExport_Image")
        self.actionSave_Metadata = QtWidgets.QAction(MainWindow)
        self.actionSave_Metadata.setObjectName("actionSave_Metadata")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionDetect_Vehicles = QtWidgets.QAction(MainWindow)
        self.actionDetect_Vehicles.setObjectName("actionDetect_Vehicles")
        self.actionDetect_Lanes = QtWidgets.QAction(MainWindow)
        self.actionDetect_Lanes.setObjectName("actionDetect_Lanes")
        self.actionAnalyse_Detections = QtWidgets.QAction(MainWindow)
        self.actionAnalyse_Detections.setObjectName("actionAnalyse_Detections")
        self.actionDocumentation = QtWidgets.QAction(MainWindow)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.actionRepository = QtWidgets.QAction(MainWindow)
        self.actionRepository.setObjectName("actionRepository")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.menuFIle.addAction(self.actionImport_Image)
        self.menuFIle.addAction(self.actionExport_Image)
        self.menuFIle.addAction(self.actionSave_Metadata)
        self.menuFIle.addAction(self.actionExit)
        self.menuTools.addAction(self.actionDetect_Vehicles)
        self.menuTools.addAction(self.actionDetect_Lanes)
        self.menuTools.addAction(self.actionAnalyse_Detections)
        self.menuHelp.addAction(self.actionDocumentation)
        self.menuHelp.addAction(self.actionRepository)
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFIle.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "VED²"))
        self.loadImage.setToolTip(_translate("MainWindow", "Load image from disk for analysis."))
        self.loadImage.setText(_translate("MainWindow", "Load Image"))
        self.analyseImage.setToolTip(_translate("MainWindow", "Start image analysis"))
        self.analyseImage.setText(_translate("MainWindow", "Start Analysis"))
        self.label.setToolTip(_translate("MainWindow", "Image will be displayed here."))
        self.label.setText(_translate("MainWindow", "Click on \"Load Image\" button to import an image"))
        self.analysisView.setToolTip(_translate("MainWindow", "Analysis Results are sumarized here."))
        self.generateReport.setToolTip(_translate("MainWindow", "Generate analysis report."))
        self.generateReport.setText(_translate("MainWindow", "Generate Report"))
        self.analysisHeading.setText(_translate("MainWindow", "Analysis Summary:"))
        self.MetadataHeading.setText(_translate("MainWindow", "Metadata Table:"))
        self.Metadata_table.setToolTip(_translate("MainWindow", "Metadata table shown here."))
        item = self.Metadata_table.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.Metadata_table.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "New Row"))
        item = self.Metadata_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Property"))
        item = self.Metadata_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Value"))
        self.addNewEntries.setToolTip(_translate("MainWindow", "Insert row for new metadata entries"))
        self.addNewEntries.setText(_translate("MainWindow", "Add New Entries"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.imageTab), _translate("MainWindow", "Image Analysis"))
        self.loadVideo.setToolTip(_translate("MainWindow", "Load image from disk for analysis."))
        self.loadVideo.setText(_translate("MainWindow", "Load Video"))
        self.analyseVideo.setToolTip(_translate("MainWindow", "Start image analysis"))
        self.analyseVideo.setText(_translate("MainWindow", "Analyse"))
        self.videoCanvas.setToolTip(_translate("MainWindow", "Image will be displayed here."))
        self.videoCanvas.setText(_translate("MainWindow", "Click on \"Load Video\" button to import a video"))
        self.playVideo.setText(_translate("MainWindow", "Play"))
        self.pauseVideo.setText(_translate("MainWindow", "Pause"))
        self.analysisView_Video.setToolTip(_translate("MainWindow", "Analysis Results are sumarized here."))
        self.generateReport_Video.setToolTip(_translate("MainWindow", "Generate analysis report."))
        self.generateReport_Video.setText(_translate("MainWindow", "Generate Report"))
        self.AnalysisHeading.setText(_translate("MainWindow", "Analysis Summary:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.videoTab), _translate("MainWindow", "Video Analysis"))
        self.menuFIle.setTitle(_translate("MainWindow", "FIle"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionImport_Image.setText(_translate("MainWindow", "Import Image"))
        self.actionImport_Image.setStatusTip(_translate("MainWindow", "Select and image for analysis"))
        self.actionImport_Image.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionExport_Image.setText(_translate("MainWindow", "Export Image"))
        self.actionExport_Image.setStatusTip(_translate("MainWindow", "Save the displayed image to disk"))
        self.actionExport_Image.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_Metadata.setText(_translate("MainWindow", "Save Metadata"))
        self.actionSave_Metadata.setShortcut(_translate("MainWindow", "Ctrl+Alt+S"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Alt+E"))
        self.actionDetect_Vehicles.setText(_translate("MainWindow", "Detect Vehicles"))
        self.actionDetect_Vehicles.setStatusTip(_translate("MainWindow", "Detect Vehicles and draw bounding boxes around detections."))
        self.actionDetect_Vehicles.setShortcut(_translate("MainWindow", "Ctrl+Alt+V"))
        self.actionDetect_Lanes.setText(_translate("MainWindow", "Detect Lanes"))
        self.actionDetect_Lanes.setStatusTip(_translate("MainWindow", "Detect Lane marking and highlight them."))
        self.actionDetect_Lanes.setShortcut(_translate("MainWindow", "Ctrl+Alt+L"))
        self.actionAnalyse_Detections.setText(_translate("MainWindow", "Analyse Detections"))
        self.actionAnalyse_Detections.setStatusTip(_translate("MainWindow", "Infer relevant information from the detections"))
        self.actionAnalyse_Detections.setShortcut(_translate("MainWindow", "Ctrl+Alt+A"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionRepository.setText(_translate("MainWindow", "Repository"))
        self.actionAbout.setText(_translate("MainWindow", "About"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

